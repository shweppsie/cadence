/* MPD javascript functions
 * 
 * Trevor Fountain, Nathan Overall
 * 1 June 2007 - current
 */

var refreshDelay = 2000;

var dirHistory = new Array('');
var volume;
var lastVolume;
var urlpath;
var playlistSize;
var prevSong;

function init() {
    Ajax.Responders.register({
        onCreate: function() {
            $('updating').style.display='';
        },
        onComplete: function() {
            $('updating').style.display='none';
        }
    });

    //Create volume slider
    volume = new Control.Slider('volume_handle','volume', {axis:'horizontal', minimum: 0, maximum: 100,alignX: 0, alignY: 0, onChange: setVolume});

    //variables for various things
    playlistSize = 0;
    prevSong = 0;

    //call the methods to put content into the page
    update();
    directory();
    playlists();
    songlist();
    urlupdate();
}

//change the url to represent current path in directory browser
function urlupdate() {
    href = document.location + "";
    dhistory = href.substr(href.lastIndexOf("#")+1,href.length);
    dhistory = unescape(dhistory);
    if(urlpath != dhistory) {
        hard_directory(dhistory);
    }
    setTimeout('urlupdate()',1000);
}

//method called to update content
function update() {
    refresh();
    //call update in refreshDelay seconds
    setTimeout('update()',refreshDelay);
}

function cleanup(text){
    text = text.replace("\\'","'");
    text = text.replace("\'","'");
    return text;
}

//builds playlist
function songlist() {
    new Ajax.Request("rpc/playlist.php",
        {
            method:"post",
            onSuccess: function(xml) {
                var res = xml.responseText.evalJSON();
                $('songlist').innerHTML = "";
                var cur = "";
                if(res.playlist[0].title != undefined) {
                    var artist = "";
                    var album = "";
                    for(var i = 0;i < res.playlist.length; i++) {
                        res.playlist[i].title = res.playlist[i].title.replace("\\'","'");
                        //print album and artist in playlist if it's different
                        if(res.playlist[i].artist != artist || res.playlist[i].album != album)
                                $('songlist').innerHTML += "<span style=\"font-weight: bold;\">" + cleanup(res.playlist[i].album) + "</span> by <span style=\"font-weight: bold;\">" + cleanup(res.playlist[i].artist) + "</span>";
                        $('songlist').innerHTML += "<li><a href='#' onclick='command(\"del\","+(i)+"); return false;'>[x]</a><a id='song_"+i+"' href='#' onclick='command(\"play\","+(i)+"); return false'>" + cleanup(res.playlist[i].title) + "</a></li>";
                        artist = res.playlist[i].artist;
                        album = res.playlist[i].album;
                    }
                }
                
            }
        });
}

function toggle_p(prop) {
    new Ajax.Request("rpc/toggle.php?property="+prop,
        {
            method:"post",
            onSuccess: function(xml) {
                refresh();
            }
        });
}

//called to update content on the page
function refresh() {
    new Ajax.Request("rpc/status.php",{
        method:"post",
        onSuccess: function(xml) {
            var res = xml.responseText.evalJSON();
            
            //updates the now playing stuff
            if(res.title && res.artist && res.album){
                $('nowplaying').innerHTML = "<span class=\"songinfo\">Title: </span>" + cleanup(res.title) + "<br>";
                $('nowplaying').innerHTML += "<span class=\"songinfo\">Artist: </span>" + cleanup(res.artist) + "<br>";
                $('nowplaying').innerHTML += "<span class=\"songinfo\">Album: </span>" + cleanup(res.album) + "<br>";
            } else if(res.file) {
                $('nowplaying').innerHTML = "<span class=\"songinfo\">" + cleanup(res.file) + "</span>";
            } else {
                $('nowplaying').innerHTML = "&nbsp;";
            }
            
            /*if(res.random)
                $('random').style.color = "#e91";
            else
                $('random').style.color = "#ddd";
            
            if(res.repeat)
                $('repeat').style.color = "#e91";
            else
                $('repeat').style.color = "#ddd";
            */
                
            /*if(res.state == "stop") {
                $('play').style.color="#ddd";
                $('play').innerHTML = "Play";
                $('stop').style.color="#e91";
            } else if(res.state == "paused") {
                $('play').style.color="#e91";
                $('play').innerHTML = "Play";
                $('stop').style.color="#ddd";
            } else if(res.state == "play") {
                $('play').style.color="#e91";
                $('play').innerHTML = "Pause";
                $('stop').style.color="#ddd";
            }
            */

            volume.setValue(res.volume / 100.0);
            
            if(res.playlistlength != playlistSize) {
                songlist();
                playlistSize = res.playlistlength;
            }

            $('song_'+prevSong).style.fontWeight="";
            $('song_'+res.pos).style.fontWeight="bold";
            prevSong = res.pos;
        },
        onFailure: function() {
        }
    });
}

function up_directory() {
    if(dirHistory.length > 1) {
        directory2(dirHistory[dirHistory.length - 2],"pop");
    } else {
        directory2("");
    }
}

function directory(path) {
    op = undefined;
    if(path == undefined || path == "")
        path = "";
    else {
        path += "/";
        op = "push";
    }
    
    directory2(path,op);
}

function hard_directory(path) {
    while(dirHistory.length >= 1 && dirHistory[dirHistory.length - 1] != path)
        dirHistory.pop();
    directory2(path);
}

function directory2(path,op) {
    new Ajax.Request("rpc/directory.php?path="+path,
        {
            method:"post",
            onSuccess: function(xml) {
                data = xml.responseText.replace(/;amp_r;/g,"&amp;");
                $('directorylist').innerHTML = data;
                if(op == "push")
                    dirHistory.push(path);
                else if(op == "pop")
                    dirHistory.pop();
                tree();
            }
        });
}

function tree(){
    $('tree').innerHTML = "<span>path: </span><a href='#' onclick='hard_directory(\"\"); return false;'>/</a> ";
    for(var i = 1;i < dirHistory.length; i++) {
        last = dirHistory[i].substr(0, dirHistory[i].length-1).lastIndexOf('/');
        folder = dirHistory[i].substr(last+1);
        $('tree').innerHTML += "<a href='#' onclick='hard_directory(\""+(dirHistory[i])+"\"); return false;'>"+folder+"</a> ";
    }
}

//add a file to playlist
function enqueue(file) {
    command('enqueue',file);
}

function addToPlaylist(path) {
    command('add',path);
}

function play() {
    cmd = $('play').innerHTML.toLowerCase();
    
    if(cmd == "play") {
        $('play').innerHTML = "Pause";
        command('play');
    } else {
        $('play').innerHTML = "Play";
        command('pause=',true);
    }
}

function command(cmd,args) {
    new Ajax.Request("rpc/command.php?command="+cmd+"&args="+args,
        {
            method:"post",
            onSuccess: function(xml) {
                refresh();
            }
        });
}

function setVolume(v) {
    v = (v*100).toFixed();
    if(v != lastVolume) {
        command("volume=",v);
        lastVolume = v;
    }
}
